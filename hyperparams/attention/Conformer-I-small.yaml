# ############################################################################
# Model: E2E ASR with Transformer
# Encoder: Conformer Encoder
# Decoder: Transformer Decoder + (CTC/ATT joint) beamsearch + TransformerLM
# Tokens: unigram
# losses: CTC + KLdiv (Label Smoothing loss)
# Training: Librispeech 960h
# Authors:  Jianyuan Zhong, Titouan Parcollet, Samuele Cornell
# ############################################################################
# Seed needs to be set at top of yaml, before objects with parameters are made

seed: 3407
__set_seed: !apply:torch.manual_seed [!ref <seed>]

num_units: 5000
output_folder: !ref exp/attention/Conformer-I-small/<seed>-<num_units>units
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
tokenizer_path: !ref exp/lm/train_varikn.bpe<num_units>.d0.0001/bpe.<num_units>.model

tokenizer: !new:sentencepiece.SentencePieceProcessor
    model_file: !ref <tokenizer_path>

# Data files
trainshards: !apply:glob.glob ["./shards/train_960/shard-000*.tar"]
validshards: !apply:glob.glob ["./shards/dev_all/shard-000*.tar"]
# data_folder_rirs: ./augmentation_data # noise/ris dataset will automatically be downloaded here

# Training parameters
# Please, set your parameters accordingly.
number_of_epochs: 120
ctc_weight: 0.3
grad_accumulation_factor: 1
max_grad_norm: 5.0
loss_reduction: 'batchmean'
sorting: random
num_workers: 4

# stages related parameters
lr_adam: 0.0008

# Feature parameters
sample_rate: 16000
n_fft: 512
n_mels: 80
win_length: 32

# To make Transformers converge, the global bath size should be large enough.
# The global batch size is computed as batch_size * n_gpus * gradient_accumulation.
# For this recipe, total batchsize should be above 2000s
# I am accumulating 6 X this batch size (6 procs OR 3 procs X Grad Accum 2 OR 2 procs X Grad Accum 3)
max_batch_len: 420
extra_length_tolerance: 30
max_batch_len_val: 40 # we reduce it as the beam is much wider (VRAM)
ckpt_interval_minutes: 5

dynamic_batch_kwargs:
    max_sample_len: !ref <sample_rate> * <max_batch_len> + <sample_rate> * <extra_length_tolerance>
    sampler_kwargs:
        target_batch_numel: !ref <sample_rate> * <max_batch_len> 
        max_batch_numel: !ref <sample_rate> * <max_batch_len> + <sample_rate> * <extra_length_tolerance>
    len_key: 'wav'
validbatchsize: 1
valid_dynamic_batch_kwargs:
    len_key: 'wav'
    sampler_kwargs:
        target_batch_numel: !ref <sample_rate> * <max_batch_len_val>
        max_batch_numel: !ref <sample_rate> * <max_batch_len_val> + <sample_rate> * <extra_length_tolerance>


# Dataloader options
train_dataloader_opts:
    num_workers: !ref <num_workers>
    looped_nominal_epoch: !ref 1824 * <grad_accumulation_factor>  # Number taken from original recipe (used exact epochs)
    batch_size: null
    persistent_workers: True

valid_dataloader_opts:
    batch_size: null


####################### Model parameters ###########################
# Transformer
d_model: 144
nhead: 4
num_encoder_layers: 12
num_decoder_layers: 4
d_ffn: 1024 
transformer_dropout: 0.1
activation: !name:torch.nn.GELU
output_neurons: 5000

# Outputs
label_smoothing: 0.1

unk_index: 0 
blank_index: 0
pad_index: 0
bos_index: 1
eos_index: 2

# Decoding parameters
average_n_ckpts: 1
test_data_dir: "valid"
test_data_id: "valid"
min_decode_ratio: 0.0
max_decode_ratio: 1.0
valid_search_interval: 20
valid_beam_size: 4
test_beam_size: 66
#lm_weight: 0.60
ctc_weight_decode: 0.40
temperature: 1.15
wer_file: !ref <output_folder>/wer_<test_data_id>_beam<test_beam_size>_temp<temperature>_ctc<ctc_weight_decode>_ckpts<average_n_ckpts>.txt
decode_text_file: !ref <output_folder>/text_<test_data_id>_beam<test_beam_size>_temp<temperature>_ctc<ctc_weight_decode>_ckpts<average_n_ckpts>.txt

############################## models ################################

CNN: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    input_shape: (8, 10, 80)
    num_blocks: 2
    num_layers_per_block: 1
    out_channels: (64, 32)
    kernel_sizes: (3, 3)
    strides: (2, 2)
    residuals: (False, False)

Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR # yamllint disable-line rule:line-length
    input_size: 640
    tgt_vocab: !ref <output_neurons>
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_encoder_layers>
    num_decoder_layers: !ref <num_decoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <transformer_dropout>
    activation: !ref <activation>
    encoder_module: conformer
    attention_type: RelPosMHAXL
    normalize_before: True
    causal: False

ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    update_until_epoch: 4

modules:
    CNN: !ref <CNN>
    Transformer: !ref <Transformer>
    seq_lin: !ref <seq_lin>
    ctc_lin: !ref <ctc_lin>
    normalize: !ref <normalize>

model: !new:torch.nn.ModuleList
    - [!ref <CNN>, !ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]

# define two optimizers here for two-stage training
Adam: !name:torch.optim.AdamW
    lr: !ref <lr_adam>
    betas: (0.9, 0.98)
    eps: 0.000000001

valid_search: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules: [!ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <valid_beam_size>
    ctc_weight: !ref <ctc_weight_decode>
    using_eos_threshold: False
    length_normalization: False


test_search: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules: [!ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <test_beam_size>
    ctc_weight: !ref <ctc_weight_decode>
    #lm_weight: !ref <lm_weight>
    #lm_modules: !ref <lm_model>
    temperature: !ref <temperature>
    #temperature_lm: 1.15
    using_eos_threshold: False
    length_normalization: True

log_softmax: !new:torch.nn.LogSoftmax
    dim: -1

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>
    reduction: !ref <loss_reduction>

seq_cost: !name:speechbrain.nnet.losses.kldiv_loss
    label_smoothing: !ref <label_smoothing>
    reduction: !ref <loss_reduction>

noam_annealing: !new:speechbrain.nnet.schedulers.NoamScheduler
    lr_initial: !ref <lr_adam>
    n_warmup_steps: 30000

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        noam_scheduler: !ref <noam_annealing>
        normalizer: !ref <normalize>
        counter: !ref <epoch_counter>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.SpecAugment
    time_warp: False
    time_warp_window: 5
    time_warp_mode: bicubic
    freq_mask: True
    n_freq_mask: 2
    time_mask: True
    n_time_mask: 10
    replace_with_zero: False
    freq_mask_width: 30
    time_mask_width: 25

#speed_perturb: !new:speechbrain.processing.speech_augmentation.SpeedPerturb
#    orig_freq: !ref <sample_rate>
#    speeds: [95, 100, 105]

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>
    win_length: !ref <win_length>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
acc_computer: !name:speechbrain.utils.Accuracy.AccuracyStats

